# Each new term in the Fibonacci sequence is generated by
# adding the previous two terms. By starting with 1 and 2,
# the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose
# values do not exceed four million, find the sum of the even-valued terms.

# -----------------------------------------------------------------------

# fibonacci number maker function
def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:

        result = fib(n-1) + fib(n-2)
        return result

fiblist = [1]
num = 1
i = 1

# loop for checking fibonacci numbers and adding them to a list
while True:
    #fiblist.extend(fib(i))
    num = fib(i)
    if num < 4000000:
        print(num)
        i += 1
        fiblist.append(num)
    else:
        break
print(fiblist)
print('\n')
del fiblist[0]
del fiblist[0]
print(fiblist)
j = 0
# Get the even values and print them
final = [e for e in fiblist if e % 2 ==0 ]

print(final)
print('This is the sum of the fib numbers: ',sum(final))
